{
    "url": "https://link.springer.com/article/10.1023/B:DAEM.0000013066.31883.73",
    "title": "Interfacing Software Libraries from Nondeterministic Prototypes",
    "abstract": "Modeling software systems is one of the most obvious uses of a formal specification language. A software prototype, automatically generated from the specification, enables the developer to validate the system in a real environment. However, real software systems are seldom developed from scratch, but rather built using existing libraries. In this paper, we show how a program based on existing software libraries is modeled in the Concurrent Object-Oriented Petri Net specification language, and how a prototype code is generated from the specification. In particular, we study the interface between nondeterminist synchronous prototypes and determinist asynchronous software libraries. We take into account, problems related with nonreversibility of actions and the transactional semantics of the specification language that is kept in the prototypes. A convenient delayed execution mechanism is proposed for the library linking part of the generated code.",
    "citation_count": 16,
    "year": "2003/12",
    "authors": [
        {
            "name": "Chachkov, Stanislav",
            "country": "Switzerland"
        },
        {
            "name": "Buchs, Didier",
            "country": "Switzerland"
        }
    ],
    "keywords": [
        "Circuits and Systems",
        "Computer-Aided Engineering (CAD, CAE) and Design",
        "Special Purpose and Application-Based Systems"
    ]
}