{
    "url": "https://www.sciencedirect.com/science/article/pii/S1383762115000740",
    "title": "Tuning the victim selection policy of Intel TBB",
    "abstract": "The wide adoption of Chip Multiprocessors (CMPs) in almost all ICT segments has triggered a change in the way software needs to be developed. Parallel programming maximizes the performance and energy efficiency of CMPs, but also comes with a new set of challenges. Parallelization overheads can account for sub-linear speedups and can increase the energy consumption of applications. In past experiments we looked at specific operations such as spawning new tasks, dequeuing the task queue and task stealing for Intel TBB. Our results showed that failed steals account for the largest overhead. In this work, we focus on TBB’s victim selection policy. We implement a new occupancy-aware policy and we improve the implementation of the pseudo-random policy we proposed in a previous paper. We compare the results of our new policies against an “oracle scheme” as well as against TBB’s random victim selection approach. Our results show improvements in execution times and energy-efficiency of up to 11.23% and 14.72% respectively when compared to TBB’s default policy.",
    "citation_count": "3",
    "year": "2015/11/01",
    "authors": [
        {
            "name": "Alexandru C. Iordan",
            "country": ""
        },
        {
            "name": "Magnus Jahre",
            "country": ""
        },
        {
            "name": "Lasse Natvig",
            "country": ""
        }
    ],
    "keywords": []
}