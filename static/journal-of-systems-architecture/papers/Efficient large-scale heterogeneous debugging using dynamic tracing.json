{
    "url": "https://www.sciencedirect.com/science/article/pii/S1383762118301838",
    "title": "Efficient large-scale heterogeneous debugging using dynamic tracing",
    "abstract": "Heterogeneous multi-core and many-core processors are increasingly common in  personal computers  and industrial systems. Efficient software development on these platforms needs suitable debugging tools, beyond traditional  interactive debuggers . An alternative, to interactively follow the execution flow of a program, is tracing within the  debugging environment , as long as the tracer has a minimal overhead. In this paper, the dynamic tracing infrastructure of GNU  debugger  (GDB) was investigated to understand its performance limitations. Thereafter, we propose an improved architecture for dynamic tracing on many-core processors within GDB, and demonstrate its scalability on highly parallel platforms. In addition, the scalability of the thread data collection and presentation component was studied and new views were proposed within the Eclipse Debugging Service Framework and the Trace Compass visualization tool. With these scalability enhancements, debuggers such as GDB can more efficiently help debugging multi-threaded programs on heterogeneous many-core processors composed of multi-core CPUs, and GPUs containing thousands of cores.",
    "citation_count": "2",
    "year": "2019/09/01",
    "authors": [
        {
            "name": "Didier Nadeau",
            "country": ""
        },
        {
            "name": "Naser Ezzati-Jivan",
            "country": ""
        },
        {
            "name": "Michel R. Dagenais",
            "country": ""
        }
    ],
    "keywords": []
}