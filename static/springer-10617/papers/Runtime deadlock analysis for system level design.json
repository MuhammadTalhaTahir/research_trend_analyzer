{
    "url": "https://link.springer.com/article/10.1007/s10617-009-9046-2",
    "title": "Runtime deadlock analysis for system level design",
    "abstract": "In the design of highly complex, heterogeneous and concurrent systems, deadlock detection remains an important issue. In this paper, we systematically analyze the synchronization dependencies in system-level designs. We propose a data structure called the dynamic synchronization dependency graph, which captures the runtime blocking dependencies among concurrent processes. A loop-detection algorithm is then used to detect deadlocks and help designers quickly isolate and identify modeling errors that cause the deadlock problems. We demonstrate our approach through two publicly available system-level modeling languages, SystemC and Metropolis, and two real world design examples, which are complex system-level functional models for video processing.",
    "citation_count": 27,
    "year": "2009/12",
    "authors": [
        {
            "name": "Cheung, Eric",
            "country": "USA"
        },
        {
            "name": "Chen, Xi",
            "country": "USA"
        },
        {
            "name": "Hsieh, Harry",
            "country": "USA"
        },
        {
            "name": "Davare, Abhijit",
            "country": "USA"
        },
        {
            "name": "Sangiovanni-Vincentelli, Alberto",
            "country": "USA"
        },
        {
            "name": "Watanabe, Yosinori",
            "country": "USA"
        }
    ],
    "keywords": [
        "Circuits and Systems",
        "Computer-Aided Engineering (CAD, CAE) and Design",
        "Special Purpose and Application-Based Systems"
    ]
}